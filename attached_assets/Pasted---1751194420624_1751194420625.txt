ЗАДАЧА:

Ты должен выполнить полный аудит фронтенда проекта и устранить все проблемные зоны. Работай так, будто проект завтра уходит в продакшн.
Обязательные действия:
	1.	Проверь и исправь маршруты:
	•	Убедись, что все ключевые страницы (включая /admin/users) добавлены в роутер и корректно отображаются.
	•	Для некорректных маршрутов должна отрабатываться страница 404.
	2.	Проверь и восстанови навигацию:
	•	Все пункты меню и переходы должны работать.
	•	Навигация должна быть логичной и структурированной (sidebar, header и пр.).
	•	Отсутствующие страницы — создать и интегрировать в меню.
	3.	Выполни аудит интерфейса:
	•	Проверь компоненты на наличие заглушек (TODO, #, javascript:void(0))
	•	Убедись, что кнопки, формы, ссылки работают как положено.
	4.	Добавь юнит-тесты маршрутов:
	•	Используй React Testing Library + Jest.
	•	Покрой ключевые страницы (/admin/users, 404) на корректный рендер.
	5.	Запусти аудит ссылок:
	•	Используй встроенный JS-скрипт (см. ниже) для поиска битых и нерабочих ссылок.
	•	Исправь все найденные нарушения.
	6.	Документируй результат:
	•	В CHANGELOG.md или коммитах отрази, какие баги найдены, что исправлено.
	•	Предоставь ссылку на ветку или коммит с исправлениями.

⸻

Используй эти инструменты:
Чеклист ревью интерфейса (в uiChecklist.js):

// Пример проверки:
'☐ Все страницы работают без 404',
'☐ Нет заглушек (#, TODO)',
'☐ Все элементы навигации активны и логичны',
'☐ Адаптивность на desktop/mobile',
'☐ Ошибки в консоли отсутствуют'
Тест маршрутов (Jest + React Testing Library):

test('Renders UsersPage at /admin/users', () => {
  render(
    <MemoryRouter initialEntries={['/admin/users']}>
      <Routes>
        <Route path='/admin/users' element={<UsersPage />} />
        <Route path='*' element={<NotFoundPage />} />
      </Routes>
    </MemoryRouter>
  );
  expect(screen.getByText(/users/i)).toBeInTheDocument();
});
Скрипт для аудита ссылок (используй в DevTools):

(function auditInternalLinks() {
  const links = Array.from(document.querySelectorAll('a'));
  const broken = links.filter(link => !link.href || link.href === '#' || link.href.includes('javascript'));
  console.table(broken.map(l => ({ text: l.innerText, href: l.getAttribute('href') })));
})();


⸻
Финальный результат

Ты сдаёшь:
	•	Все маршруты работают
	•	Вся навигация и UI-кнопки — рабочие
	•	Все ссылки проверены и исправлены
	•	Присутствуют базовые юнит-тесты
	•	Коммиты или changelog отражают изменения

⸻

Это не исправление одной ошибки. Это — самостоятельный технический аудит интерфейса, с полной ответственностью за его итоговое состояние.
